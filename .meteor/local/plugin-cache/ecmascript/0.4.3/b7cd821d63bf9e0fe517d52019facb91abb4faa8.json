{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/client.js","filenameRelative":"/client/client.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/client.js.map","sourceFileName":"/client/client.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"client"},"ignored":false,"code":"Session.setDefault(\"currentUrl\", { index: \"active\", login: \"\", reg: \"\", friend: \"\", lists: \"\", self: \"\" });\nSession.setDefault(\"info\", { success: \"\", error: \"\" });\nPosts = new Meteor.Collection(\"posts\");\nSystemInfo = new Meteor.Collection(\"systemInfo\");\nUserInfo = new Meteor.Collection(\"userInfo\");\n\nTemplate.info.helpers({\n    info: function () {\n        function info() {\n            return Session.get(\"info\");\n        }\n\n        return info;\n    }()\n});\n\nTemplate.container.helpers({\n    currentUrl: function () {\n        function currentUrl() {\n            return Session.get(\"currentUrl\");\n        }\n\n        return currentUrl;\n    }()\n});\n\nTemplate.nav.helpers({\n    active: function () {\n        function active() {\n            return Session.get(\"currentUrl\");\n        }\n\n        return active;\n    }()\n});\n\nTemplate.index.helpers({\n    posts: function () {\n        function posts() {\n            if (!Meteor.userId()) {\n                return Posts.find({ \"user._id\": \"NAEQJhrKe79xtC8Hd\", \"super\": 0 }, { sort: { time: -1 } });\n            } else {\n                return Posts.find({ \"super\": 0 }, { sort: { time: -1 } });\n            }\n        }\n\n        return posts;\n    }(),\n    comments: function () {\n        function comments() {\n            return Posts.find({ \"super\": this._id }, { sort: { time: -1 } });\n        }\n\n        return comments;\n    }()\n});\n\nTemplate.lists.helpers({\n    lists: function () {\n        function lists() {\n            return UserInfo.find({}, { sort: { rank: 1 } });\n        }\n\n        return lists;\n    }()\n});\n\nTemplate.self.helpers({\n    self: function () {\n        function self() {\n            return UserInfo.find({ \"user._id\": Meteor.userId() });\n        }\n\n        return self;\n    }()\n});\n\nMeteor.startup(function () {\n    Backbone.history.start({ pushState: true });\n});\n\nvar urlRouter = Backbone.Router.extend({\n    routes: {\n        \"\": \"index\",\n        \"login\": \"login\",\n        \"reg\": \"reg\",\n        \"logout\": \"logout\",\n        \"friend\": \"friend\",\n        \"lists\": \"lists\",\n        \"self\": \"self\"\n    },\n    index: function () {\n        function index() {\n            Session.set(\"currentUrl\", { index: \"active\", login: \"\", reg: \"\", friend: \"\", lists: \"\", self: \"\" });\n        }\n\n        return index;\n    }(),\n    friend: function () {\n        function friend() {\n            Session.set(\"currentUrl\", { index: \"\", login: \"\", reg: \"\", friend: \"active\", lists: \"\", self: \"\" });\n        }\n\n        return friend;\n    }(),\n    lists: function () {\n        function lists() {\n            Session.set(\"currentUrl\", { index: \"\", login: \"\", reg: \"\", friend: \"\", lists: \"active\", self: \"\" });\n        }\n\n        return lists;\n    }(),\n    self: function () {\n        function self() {\n            Session.set(\"currentUrl\", { index: \"\", login: \"\", reg: \"\", friend: \"\", lists: \"\", self: \"active\" });\n        }\n\n        return self;\n    }(),\n    login: function () {\n        function login() {\n            if (Meteor.userId()) {\n                this.navigate(\"/\", true);\n                Session.set(\"info\", { success: \"\", error: \"用户已在线！\" });\n            }\n            Session.set(\"currentUrl\", { index: \"\", login: \"active\", reg: \"\", friend: \"\", lists: \"\", self: \"\" });\n        }\n\n        return login;\n    }(),\n    reg: function () {\n        function reg() {\n            if (Meteor.userId()) {\n                this.navigate(\"/\", true);\n                Session.set(\"info\", { success: \"\", error: \"用户已在线！\" });\n            }\n            Session.set(\"currentUrl\", { index: \"\", login: \"\", reg: \"active\", friend: \"\", lists: \"\", self: \"\" });\n        }\n\n        return reg;\n    }(),\n    logout: function () {\n        function logout() {\n            if (Meteor.userId()) {\n                Meteor.logout();\n                this.navigate(\"/\", true);\n                Session.set(\"info\", { success: \"登出成功\", error: \"\" });\n                SystemInfo.update({ \"_id\": \"1\" }, { $inc: { totalLogin: -1 } });\n            } else {\n                this.navigate(\"/\", true);\n                Session.set(\"info\", { success: \"\", error: \"用户不在线！\" });\n            }\n        }\n\n        return logout;\n    }(),\n    redirect: function () {\n        function redirect(url) {\n            this.navigate(url, true);\n        }\n\n        return redirect;\n    }()\n});\nRouter = new urlRouter();\n\nTemplate.reg.events({\n    'click #submit': function () {\n        function clickSubmit(event) {\n            event.preventDefault();\n            if (!SystemInfo.find({ \"_id\": \"1\" }, { totalUser: true })['totalUser']) {\n                SystemInfo.insert({ \"_id\": \"1\", \"totalUser\": 0, \"totalPost\": 0, \"totalLogin\": 0 });\n            }\n            var $username = $(\"#username\").val();\n            var $password = $(\"#password\").val();\n            var $useremail = $(\"#useremail\").val();\n            var $password_repeat = $(\"#password-repeat\").val();\n            if ($password.length === 0 || $username.length === 0) {\n                Session.set(\"info\", { success: \"\", error: \"用户名或者密码不能为空\" });\n                return;\n            }\n            if ($password !== $password_repeat) {\n                Session.set(\"info\", { success: \"\", error: \"两次输入密码不一致\" });\n                return;\n            }\n            Accounts.createUser({\n                username: $username,\n                password: $password,\n                email: $useremail }, function (err) {\n                if (err) {\n                    Session.set(\"info\", { success: \"\", error: \"注册失败\" });\n                } else {\n                    Session.set(\"info\", { success: \"注册成功\", error: \"\" });\n                    UserInfo.insert({\n                        user: Meteor.user(),\n                        isAdmin: false,\n                        totalScore: 0,\n                        todayScore: 0,\n                        totalFriend: 0,\n                        rank: SystemInfo.findOne({ \"_id\": \"1\" }, { totalUser: true })[\"totalUser\"],\n                        time: new Date()\n                    });\n                }\n            });\n            SystemInfo.update({ \"_id\": \"1\" }, { $inc: { \"totalUser\": 1 } });\n            SystemInfo.update({ \"_id\": \"1\" }, { $inc: { \"totalLogin\": 1 } });\n        }\n\n        return clickSubmit;\n    }()\n});\n\nTemplate.login.events({\n    'click #submit': function () {\n        function clickSubmit(event) {\n            event.preventDefault();\n            var $username = $(\"#username\").val();\n            var $password = $(\"#password\").val();\n            if ($password.length === 0 || $username.length === 0) {\n                Session.set(\"info\", { success: \"\", error: \"用户名或密码不能为空\" });\n                return;\n            }\n            Meteor.loginWithPassword($username, $password, function (err) {\n                if (err) {\n                    Session.set(\"info\", { success: \"\", error: \"登陆失败！用户名与密码不匹配。\" });\n                } else {\n                    Router.redirect(\"/\");\n                    SystemInfo.update({ \"_id\": \"1\" }, { $inc: { \"totalLogin\": 1 } });\n                    Session.set(\"info\", { success: \"登陆成功\", error: \"\" });\n                }\n            });\n        }\n\n        return clickSubmit;\n    }()\n});\n\nTemplate.index.events({\n    'click #submit': function () {\n        function clickSubmit(event) {\n            event.preventDefault();\n            var $post = $(\"#post\").val();\n            if ($post.length === 0 || $post.length >= 200) {\n                Session.set(\"info\", { success: \"\", error: \"请将字数限制在1-200字以内\" });\n                return;\n            }\n            Posts.insert({\n                user: Meteor.user(),\n                post: $post,\n                \"super\": 0,\n                time: new Date() }, function (err) {\n                if (err) {\n                    Session.set(\"info\", { success: \"\", error: \"发表失败，原因自寻\" });\n                } else {\n                    Session.set(\"info\", { success: \"发表成功\", error: \"\" });\n                    $(\"#post\").val(\"\");\n                }\n            });\n            SystemInfo.update({ \"_id\": \"1\" }, { $inc: { \"totalPost\": 1 } });\n        }\n\n        return clickSubmit;\n    }(),\n    'click #commnetSubmit': function () {\n        function clickCommnetSubmit(event) {\n            event.preventDefault();\n            var $comment = $(\"#\" + this._id).val();\n            if ($comment.length === 0 || $comment.length >= 100) {\n                Session.set(\"info\", { success: \"\", error: \"请将字数限制在1-100字以内\" });\n                return;\n            }\n            Posts.insert({\n                user: Meteor.user(),\n                post: $comment,\n                \"super\": this._id,\n                time: new Date() }, function (err) {\n                if (err) {\n                    Session.set(\"info\", { success: \"\", error: \"评论失败，原因自寻\" });\n                } else {\n                    Session.set(\"info\", { success: \"评论成功\", error: \"\" });\n                    $(\"#\" + this._id).val(\"\");\n                }\n            });\n            SystemInfo.update({ \"_id\": \"1\" }, { $inc: { \"totalPost\": 1 } });\n        }\n\n        return clickCommnetSubmit;\n    }(),\n    'click #addFriend': function () {\n        function clickAddFriend(event) {\n            event.preventDefault();\n            var $friendId = this.user._id;\n            console.log($friendId);\n            if (UserInfo.findOne({ \"Friends\": $friendId })) {\n                Session.set(\"info\", { success: \"\", error: \"错误：此好友已经存在\" });\n                return;\n            }\n\n            var userInfoId = UserInfo.findOne({ \"user._id\": Meteor.userId() })._id;\n            UserInfo.update({\n                \"_id\": userInfoId\n            }, {\n                $addToSet: { \"Friends\": $friendId },\n                $inc: { \"totalFriend\": 1 }\n            }, true, true, function (err) {\n                if (err) {\n                    Session.set(\"info\", { success: \"\", error: \"添加好友失败\" });\n                } else {\n                    Session.set(\"info\", { success: \"添加成功\", error: \"\" });\n                }\n            });\n        }\n\n        return clickAddFriend;\n    }()\n});","ast":null,"map":{"version":3,"sources":["/client/client.js"],"names":[],"mappings":"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","file":"/client/client.js.map","sourcesContent":["Session.setDefault(\"currentUrl\", {index: \"active\", login: \"\", reg: \"\",friend:\"\",lists:\"\",self:\"\"});\r\nSession.setDefault(\"info\", {success:\"\",error:\"\"});\r\nPosts = new Meteor.Collection(\"posts\");\r\nSystemInfo = new Meteor.Collection(\"systemInfo\");\r\nUserInfo = new Meteor.Collection(\"userInfo\");\r\n\r\nTemplate.info.helpers({\r\n    info(){\r\n        return Session.get(\"info\");\r\n    },\r\n});\r\n\r\nTemplate.container.helpers({\r\n    currentUrl(){\r\n        return Session.get(\"currentUrl\");\r\n    },\r\n});\r\n\r\nTemplate.nav.helpers({\r\n    active(){\r\n        return Session.get(\"currentUrl\");\r\n    },\r\n});\r\n\r\nTemplate.index.helpers({\r\n    posts(){\r\n        if(!Meteor.userId()){\r\n            return Posts.find({\"user._id\":\"NAEQJhrKe79xtC8Hd\",\"super\":0},{sort: {time: -1}});\r\n        }else{\r\n            return Posts.find({\"super\":0},{sort: {time: -1}});\r\n        }\r\n    },\r\n    comments(){\r\n        return Posts.find({\"super\":this._id},{sort: {time: -1}});\r\n    },\r\n});\r\n\r\nTemplate.lists.helpers({\r\n    lists(){\r\n        return UserInfo.find({},{sort: {rank: 1}})\r\n    },\r\n});\r\n\r\nTemplate.self.helpers({\r\n    self(){\r\n        return UserInfo.find({\"user._id\":Meteor.userId()});\r\n    },\r\n});\r\n\r\nMeteor.startup(function () {\r\n    Backbone.history.start({pushState: true});\r\n});\r\n\r\nvar urlRouter = Backbone.Router.extend({\r\n    routes: {\r\n        \"\": \"index\",\r\n        \"login\": \"login\",\r\n        \"reg\": \"reg\",\r\n        \"logout\": \"logout\",\r\n        \"friend\": \"friend\",\r\n        \"lists\": \"lists\",\r\n        \"self\": \"self\"\r\n    },\r\n    index: function () {\r\n        Session.set(\"currentUrl\", {index: \"active\", login: \"\", reg: \"\",friend:\"\",lists:\"\",self:\"\"});\r\n    },\r\n    friend: function () {\r\n        Session.set(\"currentUrl\", {index: \"\", login: \"\", reg: \"\",friend:\"active\",lists:\"\",self:\"\"});\r\n    },\r\n    lists: function () {\r\n        Session.set(\"currentUrl\", {index: \"\", login: \"\", reg: \"\",friend:\"\",lists:\"active\",self:\"\"});\r\n    },\r\n    self: function () {\r\n        Session.set(\"currentUrl\", {index: \"\", login: \"\", reg: \"\",friend:\"\",lists:\"\",self:\"active\"});\r\n    },\r\n    login: function () {\r\n        if(Meteor.userId()){\r\n            this.navigate(\"/\",true);\r\n            Session.set(\"info\", {success:\"\", error: \"用户已在线！\"});\r\n        }\r\n        Session.set(\"currentUrl\", {index: \"\", login:\"active\", reg: \"\",friend:\"\",lists:\"\",self:\"\"});\r\n    },\r\n    reg: function () {\r\n        if(Meteor.userId()){\r\n            this.navigate(\"/\",true);\r\n            Session.set(\"info\", {success:\"\", error: \"用户已在线！\"});\r\n        }\r\n        Session.set(\"currentUrl\", {index: \"\", login: \"\", reg: \"active\",friend:\"\",lists:\"\",self:\"\"});\r\n    },\r\n    logout: function () {\r\n        if(Meteor.userId()){\r\n            Meteor.logout();\r\n            this.navigate(\"/\",true);\r\n            Session.set(\"info\", {success:\"登出成功\", error: \"\"});\r\n            SystemInfo.update({\"_id\":\"1\"},{$inc: {totalLogin:-1}});\r\n        }else{\r\n            this.navigate(\"/\",true);\r\n            Session.set(\"info\", {success:\"\", error: \"用户不在线！\"});\r\n        }\r\n    },\r\n    redirect: function(url){\r\n        this.navigate(url, true);\r\n    }\r\n});\r\nRouter = new urlRouter;\r\n\r\nTemplate.reg.events({\r\n    'click #submit': function (event) {\r\n        event.preventDefault();\r\n        if(!SystemInfo.find({\"_id\":\"1\"},{totalUser:true})['totalUser']){\r\n            SystemInfo.insert({\"_id\":\"1\",\"totalUser\":0,\"totalPost\":0,\"totalLogin\":0});\r\n        }\r\n        var $username = $(\"#username\").val();\r\n        var $password = $(\"#password\").val();\r\n        var $useremail = $(\"#useremail\").val();\r\n        var $password_repeat = $(\"#password-repeat\").val();\r\n        if ($password.length === 0 || $username.length === 0) {\r\n            Session.set(\"info\", {success: \"\", error:\"用户名或者密码不能为空\"});\r\n            return;\r\n        }\r\n        if ($password !== $password_repeat) {\r\n            Session.set(\"info\", {success: \"\",error:\"两次输入密码不一致\"});\r\n            return;\r\n        }\r\n        Accounts.createUser({\r\n            username: $username,\r\n            password: $password,\r\n            email: $useremail},\r\n            function(err){\r\n                if(err){\r\n                    Session.set(\"info\", {success:\"\", error:\"注册失败\"});\r\n                }else{\r\n                    Session.set(\"info\", {success:\"注册成功\", error:\"\"});\r\n                    UserInfo.insert({\r\n                        user:Meteor.user(),\r\n                        isAdmin:false,\r\n                        totalScore:0,\r\n                        todayScore:0,\r\n                        totalFriend:0,\r\n                        rank:SystemInfo.findOne({\"_id\":\"1\"},{totalUser:true})[\"totalUser\"],\r\n                        time:new Date()\r\n                    });\r\n                }\r\n            }\r\n        );\r\n        SystemInfo.update({\"_id\":\"1\"},{$inc: {\"totalUser\":1}});\r\n        SystemInfo.update({\"_id\":\"1\"},{$inc: {\"totalLogin\":1}});\r\n    }\r\n});\r\n\r\nTemplate.login.events({\r\n    'click #submit': function (event) {\r\n        event.preventDefault();\r\n        var $username = $(\"#username\").val();\r\n        var $password = $(\"#password\").val();\r\n        if ($password.length === 0 || $username.length === 0) {\r\n            Session.set(\"info\", {success:\"\", error: \"用户名或密码不能为空\"});\r\n            return;\r\n        } \r\n        Meteor.loginWithPassword($username, $password, function (err) {\r\n            if(err){\r\n                Session.set(\"info\", {success:\"\", error:\"登陆失败！用户名与密码不匹配。\"});\r\n            }else{\r\n                Router.redirect(\"/\");\r\n                SystemInfo.update({\"_id\":\"1\"},{$inc: {\"totalLogin\":1}});\r\n                Session.set(\"info\", {success: \"登陆成功\", error:\"\"});\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\nTemplate.index.events({\r\n    'click #submit':function (event) {\r\n        event.preventDefault();\r\n        var $post = $(\"#post\").val();\r\n        if ($post.length === 0 || $post.length >= 200) {\r\n            Session.set(\"info\", {success:\"\", error:\"请将字数限制在1-200字以内\"});\r\n            return;\r\n        }\r\n        Posts.insert({\r\n            user: Meteor.user(), \r\n            post: $post, \r\n            super:0,\r\n            time:new Date()},\r\n            function(err){\r\n                if(err){\r\n                    Session.set(\"info\", {success:\"\", error:\"发表失败，原因自寻\"});\r\n                }else{\r\n                    Session.set(\"info\", {success:\"发表成功\", error:\"\"});\r\n                    $(\"#post\").val(\"\");\r\n                }\r\n            }\r\n        );\r\n        SystemInfo.update({\"_id\":\"1\"},{$inc: {\"totalPost\":1}});\r\n    },\r\n    'click #commnetSubmit':function (event) {\r\n        event.preventDefault();\r\n        var $comment = $(\"#\"+this._id).val();\r\n        if ($comment.length === 0 || $comment.length >= 100) {\r\n            Session.set(\"info\", {success:\"\", error:\"请将字数限制在1-100字以内\"});\r\n            return;\r\n        }\r\n        Posts.insert({\r\n            user: Meteor.user(), \r\n            post: $comment, \r\n            super:this._id,\r\n            time:new Date()},\r\n            function(err){\r\n                if(err){\r\n                    Session.set(\"info\", {success:\"\", error:\"评论失败，原因自寻\"});\r\n                }else{\r\n                    Session.set(\"info\", {success:\"评论成功\", error:\"\"});\r\n                    $(\"#\"+this._id).val(\"\");\r\n                }\r\n            }\r\n        );\r\n        SystemInfo.update({\"_id\":\"1\"},{$inc: {\"totalPost\":1}});\r\n    },\r\n    'click #addFriend':function (event) {\r\n        event.preventDefault();\r\n        var $friendId = this.user._id;\r\n        console.log($friendId);\r\n        if (UserInfo.findOne({\"Friends\":$friendId})) {\r\n            Session.set(\"info\", {success:\"\", error:\"错误：此好友已经存在\"});\r\n            return;\r\n        }\r\n        \r\n        var userInfoId = UserInfo.findOne({\"user._id\":Meteor.userId()})._id;\r\n        UserInfo.update({\r\n                \"_id\":userInfoId\r\n            },{\r\n                $addToSet:{\"Friends\":$friendId},\r\n                $inc:{\"totalFriend\":1}\r\n            },\r\n            true,true,\r\n            function(err){\r\n                if(err){\r\n                    Session.set(\"info\", {success:\"\", error:\"添加好友失败\"});\r\n                }else{\r\n                    Session.set(\"info\", {success:\"添加成功\", error:\"\"});\r\n                }\r\n            }\r\n        );\r\n    }\r\n})\r\n"]},"hash":"b7cd821d63bf9e0fe517d52019facb91abb4faa8"}
