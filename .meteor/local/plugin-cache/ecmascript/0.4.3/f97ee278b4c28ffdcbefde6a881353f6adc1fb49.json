{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/client.js","filenameRelative":"/client/client.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/client.js.map","sourceFileName":"/client/client.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"client"},"ignored":false,"code":"Session.setDefault(\"currentUrl\", { index: \"active\", login: \"\", reg: \"\", friend: \"\", lists: \"\", self: \"\" });\nSession.setDefault(\"info\", { success: \"\", error: \"\" });\nPosts = new Meteor.Collection(\"posts\");\nSystemInfo = new Meteor.Collection(\"systemInfo\");\n\nTemplate.info.info = function () {\n    return Session.get(\"info\");\n};\n\nTemplate.container.currentUrl = function () {\n    return Session.get(\"currentUrl\");\n};\n\nTemplate.nav.active = function () {\n    return Session.get(\"currentUrl\");\n};\n\nTemplate.index.posts = function () {\n    return Posts.find({}, { sort: { time: -1 } });\n};\n\nMeteor.startup(function () {\n    Backbone.history.start({ pushState: true });\n});\n\nvar urlRouter = Backbone.Router.extend({\n    routes: {\n        \"\": \"index\",\n        \"login\": \"login\",\n        \"reg\": \"reg\",\n        \"logout\": \"logout\",\n        \"friend\": \"friend\",\n        \"lists\": \"lists\",\n        \"self\": \"self\"\n    },\n    index: function () {\n        function index() {\n            Session.set(\"currentUrl\", { index: \"active\", login: \"\", reg: \"\", friend: \"\", lists: \"\", self: \"\" });\n        }\n\n        return index;\n    }(),\n    friend: function () {\n        function friend() {\n            Session.set(\"currentUrl\", { index: \"\", login: \"\", reg: \"\", friend: \"active\", lists: \"\", self: \"\" });\n        }\n\n        return friend;\n    }(),\n    lists: function () {\n        function lists() {\n            Session.set(\"currentUrl\", { index: \"\", login: \"\", reg: \"\", friend: \"\", lists: \"active\", self: \"\" });\n        }\n\n        return lists;\n    }(),\n    self: function () {\n        function self() {\n            Session.set(\"currentUrl\", { index: \"\", login: \"\", reg: \"\", friend: \"\", lists: \"\", self: \"active\" });\n        }\n\n        return self;\n    }(),\n    login: function () {\n        function login() {\n            if (Meteor.userId()) {\n                this.navigate(\"/\", true);\n                Session.set(\"info\", { success: \"\", error: \"用户已在线！\" });\n            }\n            Session.set(\"currentUrl\", { index: \"\", login: \"active\", reg: \"\", friend: \"\", lists: \"\", self: \"\" });\n        }\n\n        return login;\n    }(),\n    reg: function () {\n        function reg() {\n            if (Meteor.userId()) {\n                this.navigate(\"/\", true);\n                Session.set(\"info\", { success: \"\", error: \"用户已在线！\" });\n            }\n            Session.set(\"currentUrl\", { index: \"\", login: \"\", reg: \"active\", friend: \"\", lists: \"\", self: \"\" });\n        }\n\n        return reg;\n    }(),\n    logout: function () {\n        function logout() {\n            if (Meteor.userId()) {\n                Meteor.logout();\n                this.navigate(\"/\", true);\n                Session.set(\"info\", { success: \"登出成功\", error: \"\" });\n            } else {\n                this.navigate(\"/\", true);\n                Session.set(\"info\", { success: \"\", error: \"用户不在线！\" });\n            }\n        }\n\n        return logout;\n    }(),\n    redirect: function () {\n        function redirect(url) {\n            this.navigate(url, true);\n        }\n\n        return redirect;\n    }()\n});\nRouter = new urlRouter();\n\nTemplate.reg.events({\n    'click #submit': function () {\n        function clickSubmit(event) {\n            event.preventDefault();\n            var $username = $(\"#username\").val();\n            var $password = $(\"#password\").val();\n            var $useremail = $(\"#useremail\").val();\n            var $password_repeat = $(\"#password-repeat\").val();\n            if ($password.length === 0 || $username.length === 0) {\n                Session.set(\"info\", { success: \"\", error: \"用户名或者密码不能为空\" });\n                return;\n            }\n            if ($password !== $password_repeat) {\n                Session.set(\"info\", { success: \"\", error: \"两次输入密码不一致\" });\n                return;\n            }\n            Accounts.createUser({\n                username: $username,\n                password: $password,\n                email: $useremail,\n                isAdmin: false,\n                totalScore: 0,\n                todayScore: 0,\n                totalFriend: 0,\n                rank: SystemInfo.totalUser + 1 }, function (err) {\n                if (err) {\n                    Session.set(\"info\", { success: \"\", error: err.reason });\n                } else {\n                    Session.set(\"info\", { success: \"注册成功\", error: \"\" });\n                }\n            });\n            SystemInfo.update({ name: \"newsplatform\" }, { $inc: { totalUser: 1 } });\n        }\n\n        return clickSubmit;\n    }()\n});\n\nTemplate.login.events({\n    'click #submit': function () {\n        function clickSubmit(event) {\n            event.preventDefault();\n            var $username = $(\"#username\").val();\n            var $password = $(\"#password\").val();\n            if ($password.length === 0 || $username.length === 0) {\n                Session.set(\"info\", { success: \"\", error: \"用户名或密码不能为空\" });\n                return;\n            }\n            Meteor.loginWithPassword($username, $password, function (err) {\n                if (err) {\n                    Session.set(\"info\", { success: \"\", error: \"登陆失败！用户名与密码不匹配。\" });\n                } else {\n                    Router.redirect(\"/\");\n                    Session.set(\"info\", { success: \"登陆成功\", error: \"\" });\n                }\n            });\n        }\n\n        return clickSubmit;\n    }()\n});\n\nTemplate.index.events({\n    'click #submit': function () {\n        function clickSubmit(event) {\n            event.preventDefault();\n            var $post = $(\"#post\").val();\n            if ($post.length === 0 || $post.length >= 200) {\n                Session.set(\"info\", { success: \"\", error: \"请将字数限制在1-200字以内\" });\n                return;\n            }\n            Posts.insert({\n                user: Meteor.user(),\n                post: $post,\n                time: new Date() }, function (err) {\n                if (err) {\n                    Session.set(\"info\", { success: \"\", error: \"发表失败，原因自寻\" });\n                } else {\n                    Session.set(\"info\", { success: \"发表成功\", error: \"\" });\n                    $(\"#post\").val(\"\");\n                }\n            });\n        }\n\n        return clickSubmit;\n    }()\n});","ast":null,"map":{"version":3,"sources":["/client/client.js"],"names":[],"mappings":"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","file":"/client/client.js.map","sourcesContent":["Session.setDefault(\"currentUrl\", {index: \"active\", login: \"\", reg: \"\",friend:\"\",lists:\"\",self:\"\"});\r\nSession.setDefault(\"info\", {success:\"\",error:\"\"});\r\nPosts = new Meteor.Collection(\"posts\");\r\nSystemInfo = new Meteor.Collection(\"systemInfo\");\r\n\r\nTemplate.info.info = function () {\r\n    return Session.get(\"info\");\r\n}\r\n\r\nTemplate.container.currentUrl = function() {\r\n    return Session.get(\"currentUrl\");\r\n}\r\n\r\nTemplate.nav.active = function () {\r\n    return Session.get(\"currentUrl\");\r\n};\r\n\r\nTemplate.index.posts = function(){\r\n    return Posts.find({},{sort: {time: -1}});\r\n};\r\n\r\nMeteor.startup(function () {\r\n    Backbone.history.start({pushState: true});\r\n});\r\n\r\nvar urlRouter = Backbone.Router.extend({\r\n    routes: {\r\n        \"\": \"index\",\r\n        \"login\": \"login\",\r\n        \"reg\": \"reg\",\r\n        \"logout\": \"logout\",\r\n        \"friend\": \"friend\",\r\n        \"lists\": \"lists\",\r\n        \"self\": \"self\"\r\n    },\r\n    index: function () {\r\n        Session.set(\"currentUrl\", {index: \"active\", login: \"\", reg: \"\",friend:\"\",lists:\"\",self:\"\"});\r\n    },\r\n    friend: function () {\r\n        Session.set(\"currentUrl\", {index: \"\", login: \"\", reg: \"\",friend:\"active\",lists:\"\",self:\"\"});\r\n    },\r\n    lists: function () {\r\n        Session.set(\"currentUrl\", {index: \"\", login: \"\", reg: \"\",friend:\"\",lists:\"active\",self:\"\"});\r\n    },\r\n    self: function () {\r\n        Session.set(\"currentUrl\", {index: \"\", login: \"\", reg: \"\",friend:\"\",lists:\"\",self:\"active\"});\r\n    },\r\n    login: function () {\r\n        if(Meteor.userId()){\r\n            this.navigate(\"/\",true);\r\n            Session.set(\"info\", {success:\"\", error: \"用户已在线！\"});\r\n        }\r\n        Session.set(\"currentUrl\", {index: \"\", login:\"active\", reg: \"\",friend:\"\",lists:\"\",self:\"\"});\r\n    },\r\n    reg: function () {\r\n        if(Meteor.userId()){\r\n            this.navigate(\"/\",true);\r\n            Session.set(\"info\", {success:\"\", error: \"用户已在线！\"});\r\n        }\r\n        Session.set(\"currentUrl\", {index: \"\", login: \"\", reg: \"active\",friend:\"\",lists:\"\",self:\"\"});\r\n    },\r\n    logout: function () {\r\n        if(Meteor.userId()){\r\n            Meteor.logout();\r\n            this.navigate(\"/\",true);\r\n            Session.set(\"info\", {success:\"登出成功\", error: \"\"});\r\n        }else{\r\n            this.navigate(\"/\",true);\r\n            Session.set(\"info\", {success:\"\", error: \"用户不在线！\"});\r\n        }\r\n    },\r\n    redirect: function(url){\r\n        this.navigate(url, true);\r\n    }\r\n});\r\nRouter = new urlRouter;\r\n\r\nTemplate.reg.events({\r\n    'click #submit': function (event) {\r\n        event.preventDefault();\r\n        var $username = $(\"#username\").val();\r\n        var $password = $(\"#password\").val();\r\n        var $useremail = $(\"#useremail\").val();\r\n        var $password_repeat = $(\"#password-repeat\").val();\r\n        if ($password.length === 0 || $username.length === 0) {\r\n            Session.set(\"info\", {success: \"\", error:\"用户名或者密码不能为空\"});\r\n            return;\r\n        }\r\n        if ($password !== $password_repeat) {\r\n            Session.set(\"info\", {success: \"\",error:\"两次输入密码不一致\"});\r\n            return;\r\n        }\r\n        Accounts.createUser({\r\n            username: $username,\r\n            password: $password,\r\n            email: $useremail,\r\n            isAdmin:false,\r\n            totalScore:0,\r\n            todayScore:0,\r\n            totalFriend:0,\r\n            rank:SystemInfo.totalUser+1},\r\n            function(err){\r\n                if(err){\r\n                    Session.set(\"info\", {success:\"\", error:err.reason});\r\n                }else{\r\n                    Session.set(\"info\", {success:\"注册成功\", error:\"\"});\r\n                }\r\n            }\r\n        );\r\n        SystemInfo.update({name:\"newsplatform\"},{$inc: {totalUser:1}});\r\n    }\r\n});\r\n\r\nTemplate.login.events({\r\n    'click #submit': function (event) {\r\n        event.preventDefault();\r\n        var $username = $(\"#username\").val();\r\n        var $password = $(\"#password\").val();\r\n        if ($password.length === 0 || $username.length === 0) {\r\n            Session.set(\"info\", {success:\"\", error: \"用户名或密码不能为空\"});\r\n            return;\r\n        } \r\n        Meteor.loginWithPassword($username, $password, function (err) {\r\n            if(err){\r\n                Session.set(\"info\", {success:\"\", error:\"登陆失败！用户名与密码不匹配。\"});\r\n            }else{\r\n                Router.redirect(\"/\");\r\n                Session.set(\"info\", {success: \"登陆成功\", error:\"\"});\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\nTemplate.index.events({\r\n    'click #submit':function (event) {\r\n        event.preventDefault();\r\n        var $post = $(\"#post\").val();\r\n        if ($post.length === 0 || $post.length >= 200) {\r\n            Session.set(\"info\", {success:\"\", error:\"请将字数限制在1-200字以内\"});\r\n            return;\r\n        }\r\n        Posts.insert({\r\n            user: Meteor.user(), \r\n            post: $post, \r\n            time:new Date()},\r\n            function(err){\r\n                if(err){\r\n                    Session.set(\"info\", {success:\"\", error:\"发表失败，原因自寻\"});\r\n                }else{\r\n                    Session.set(\"info\", {success:\"发表成功\", error:\"\"});\r\n                    $(\"#post\").val(\"\");\r\n                }\r\n            });\r\n    }\r\n})\r\n\r\n\r\n"]},"hash":"f97ee278b4c28ffdcbefde6a881353f6adc1fb49"}
